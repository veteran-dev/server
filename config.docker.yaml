# github.com/veteran-dev/server Global Configuration

# jwt configuration
jwt:
  signing-key: qmPlus
  expires-time: 7d
  buffer-time: 1d
  issuer: qmPlus
# zap logger configuration
zap:
  level: info
  format: console
  prefix: "[github.com/veteran-dev/server]"
  director: log
  show-line: true
  encode-level: LowercaseColorLevelEncoder
  stacktrace-key: stacktrace
  log-in-console: true

# redis configuration
redis:
  db: 0
  addr: redis-master.redis.svc.cluster.local:6379
  password: "XKcOj62Cod"

# mongo configuration
mongo:
  coll: ''
  options: ''
  database: ''
  username: ''
  password: ''
  min-pool-size: 0
  max-pool-size: 100
  socket-timeout-ms: 0
  connect-timeout-ms: 0
  is-zap: false
  hosts:
    - host: ''
      port: ''

# email configuration
email:
  to: xxx@qq.com
  port: 465
  from: xxx@163.com
  host: smtp.163.com
  is-ssl: true
  secret: xxx
  nickname: test
alipay:
    appid:  2021004144614245
    private-key: MIIEowIBAAKCAQEAgrkdfWuuBAazG5A3Hm5ZOcDHQRouT2d6GqaQqT8dGgSW/cRUglb4lF1HY0s/X1kAPjSbdwTPvE4Psz52XOPb22YipI4KrZrW6vJFklOQU2SIPxXtE8eq8Nsd5cMp0yLgFilqZMlDRApfIubtFct0AiLBMlXgsVlg9siSWh309jqRCLer5c/Md3rHxFuj5fQ/KPUZ0bN05HPsaqHo5xDWk334er+o9Z+V95m2KYh9BKJiWQ3vW2sogXdqXiEUsbDtpTK4YYGgQ/1vQ0QfU/TYu/BQZ73w4D2MglBFxBwstBZbwqDUCAAV+4zS9Qrr90ksXOboFjFfOVUYIHHLT0eaIwIDAQABAoIBAH5h/FnivkXUOFugrTl1lDwa3klZx4YrU8jqWpfWlgsuftBvfQjajs/Z8wfTmzxSrsJ1WAzUkQbMLa+s5wBdp5TRhRK05Sv8tGZHvu1+bt3BJ1xelWv3MZRVM+2MJyai5CVo+xzf3HGu2VXED1lv7wOVmFVS475y3CUbuyr3JXrbqITwk5YIeDxoAkRcjyjTYJvBJoI24TVtRgKnF8XmFO2qYSrY5p5C9pQfj4C8r5f4P7YOP8aLnd8qJqkJ6ks0JHsBX9dmkfq9HbealxOp8c8WUp9w1mKXmlNmDxYz1D4g9y9f8m+ZdnBkuyHkwW+1WUi7RfSNDRnxi5SX5Ble2pkCgYEA96JCDc+OLA9YOonKWOKyCJkoPeLXyfwtYpqc22EFoH0nsY/n1WDFo0wnXluviUIXlhNR+zx+PiG1+u8PJ0Dl/N7glRP2P5PrDCY+KyX3mOSzqUl1j7Jgv5bI5+ZR6co711rEu5/97XElAs9hKFpLhQ4VDb2PBoLn5Ndef+P/j0cCgYEAhyO3eApm2mshxOg/DtBrwRBlq/sWLI+D8RBTS9yveNWup/YcfoYHb0okf89yWbcb0KvNKodjCYetmRGdWJ9MoO7Uc50Y2krt+lH4fiHKl/4nJ8OApF0+Xe+YiUEoluNaEcm3XH/+B2skA5gjeE645BpBtwzvL+e6bN8yQ9rAJEUCgYEA32IYcfrshmRlM5E+3oXJEiaO/ZyXClcY3d0ZaHCSMd8UooFtIbgFMTSuQtk0dP4Q5smQ57D/NK8WSUHDiqZpkX3AW9rBBUM7Ah+xbxz1yI9uXmSszy6bRdkQbNkAxYQwDSmNVK+T0dCCEZHfVBZ4D5PPfDCmR7po069QSM/0plsCgYBBEDgoClIEvOmwROT/O+d1N3DMAYJmh95NdL+12ZV+BtslML/9RohT042JH5Z9jURODjkkTbSoBPPWq31nCqM5JGOTGkK57rNu/oI2MAy7avjtExpfiCkbztxQ0Nc69lEKGWU3msPyTGo1dM03AifQYrfa6tZJ6TZ/bmJj+vDhRQKBgEc2JovPTsOtFDiOZSf+JFysUdQLHqI/DkIP0nCwhT1aAoLBU1nPiXDOm/Qu61zCfsE3yCTr1A2uPwqpYvD4XLlzbOvkosBg8ieBtsK62VLgznAkT/r/2htYxjNBlydsEABABPgzADggfjsGBE7EjeWOAm/2e1JmX4QhiJOW4pD1
    ali-public-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhgs97iHHZ4193jHQMxj+jHIr5Fdj6hBHerPOzI1vKCpH2iFHZK/v4U7YML5OXILybdq+uHT9p4mi7cNEAHN/R5REYrX8DEbEgmSFmsaY2e81MzLxO0QENkp49nnPmhsberExS2s7gTEBtj4SREL+qk0oPgyD5rcCN4xaDCSBEJtQRtzt5zejaxuJDQA1yFNZlxgiIANsbT9SnNm4PD7d6mrek+wK75xPM4zRvOALryEWJo4smGbAFMMCf5X0VVdS4WOQEmIpyCynBGystG4IylsN0K0QcRtIapMGJczpM5ydKwHTcLLPvKWKPhAzcq8EfK1oTQlWfJFbLX7for8cfwIDAQAB


# system configuration
system:
  env: public  # Change to "develop" to skip authentication for development mode
  addr: 8000
  db-type: mysql
  oss-type: local    # 控制oss选择走本地还是 七牛等其他仓 自行增加其他oss仓可以在 server/utils/upload/upload.go 中 NewOss函数配置
  use-redis: false     # 使用redis
  use-mongo: false     # 使用mongo
  use-multipoint: false
  # IP限制次数 一个小时15000次
  iplimit-count: 15000
  #  IP限制一个小时
  iplimit-time: 3600
  ditu-key: e1450be360f0a3d071631e15f000eb4c
  channel-code: CmdcAli
  poi: 
      - "150202"
      - "150203"
      - "150105"
      - "150501"
  reason:
      - "行程有变，暂时不需要用车"
      - "订单信息有误"
      - "选择了其他交通方式"
      - "其他平台价格更低"
      - "司机信息未更新，担心影响行程"
  
# captcha configuration
captcha:
  key-long: 6
  img-width: 240
  img-height: 80
  open-captcha: 0 # 0代表一直开启，大于0代表限制次数
  open-captcha-timeout: 3600 # open-captcha大于0时才生效

# mysql connect configuration
# 未初始化之前请勿手动修改数据库信息！！！如果一定要手动初始化请看（https://gin-vue-admin.com/docs/first_master）
mysql:
  path: "maria-mariadb.db.svc.cluster.local"
  config: charset=utf8mb4&parseTime=True&loc=Local
  port: "3306"
  db-name: "nendb"
  username: "root"
  password: "yZPmO5ooSk"
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false

db-list:
  - disable: true # 是否禁用
    type: "" # 数据库的类型,目前支持mysql、pgsql
    alias-name: "" # 数据库的名称,注意: alias-name 需要在db-list中唯一
    path: ""
    port: ""
    config: ""
    db-name: ""
    username: ""
    password: ""
    max-idle-conns: 10
    max-open-conns: 100
    log-mode: ""
    log-zap: false


# local configuration
local:
  path: uploads/file
  store-path: uploads/file

# autocode configuration
autocode:
  transfer-restart: true
  # root 自动适配项目根目录
  # 请不要手动配置,他会在项目加载的时候识别出根路径
  root: ""
  server: /server
  server-plug: /plugin/%s
  server-api: /api/v1/%s
  server-initialize: /initialize
  server-model: /model/%s
  server-request: /model/%s/request/
  server-router: /router/%s
  server-service: /service/%s
  web: /web/src
  web-api: /api
  web-form: /view
  web-table: /view

# qiniu configuration (请自行七牛申请对应的 公钥 私钥 bucket 和 域名地址)
qiniu:
  zone: ZoneHuaDong
  bucket: ""
  img-path: ""
  use-https: false
  access-key: ""
  secret-key: ""
  use-cdn-domains: false

# aliyun oss configuration
aliyun-oss:
  endpoint: yourEndpoint
  access-key-id: yourAccessKeyId
  access-key-secret: yourAccessKeySecret
  bucket-name: yourBucketName
  bucket-url: yourBucketUrl
  base-path: yourBasePath

# tencent cos configuration
tencent-cos:
  bucket: xxxxx-10005608
  region: ap-shanghai
  secret-id: your-secret-id
  secret-key: your-secret-key
  base-url: https://gin.vue.admin
  path-prefix: github.com/veteran-dev/server

# aws s3 configuration (minio compatible)
aws-s3:
  bucket: xxxxx-10005608
  region: ap-shanghai
  endpoint: ""
  s3-force-path-style: false
  disable-ssl: false
  secret-id: your-secret-id
  secret-key: your-secret-key
  base-url: https://gin.vue.admin
  path-prefix: github.com/veteran-dev/server

# huawei obs configuration
hua-wei-obs:
  path: you-path
  bucket: you-bucket
  endpoint: you-endpoint
  access-key: you-access-key
  secret-key: you-secret-key

# excel configuration
excel:
  dir: ./resource/excel/

# timer task db clear table
Timer:
  start: true
  spec: "@daily"  # 定时任务详细配置参考 https://pkg.go.dev/github.com/robfig/cron/v3
  detail:
    - tableName: sys_operation_records
      compareField: created_at
      interval: 2160h
    - tableName: jwt_blacklists
      compareField: created_at
      interval: 168h

# 跨域配置
# 需要配合 server/initialize/router.go -> `Router.Use(middleware.CorsByRules())` 使用
cors:
  mode: whitelist # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝
  whitelist:
    - allow-origin: example1.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值